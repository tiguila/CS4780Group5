Tasks
Part 1. SDES

Implement SDES. To verify that your implementation of SDES is correct, try the following test cases:

Raw Key           Plaintext             Ciphertext

0000000000     10101010            00010001

1110001110     10101010            11001010

1110001110     01010101            01110000

1111111111     10101010            00000100

Use your implementation to complete the following table:

Raw Key         Plaintext             Ciphertext
 
0000000000     00000000                 ?
1111111111     11111111                 ?
0000011111     00000000                 ?
0000011111     11111111                 ?
1000101110     ?                       00011100
1000101110     ?                       11000010
0010011111     ?                       10011101
0010011111     ?                       10010000
 

Part 2. TripleSDES 

 Implement TripleSDES and use your implementation to complete the following table:
 
Raw Key 1        Raw Key        Plaintext         Ciphertext
 
0000000000     0000000000     00000000         ?
1000101110     0110101110     11010111         ?
1000101110     0110101110     10101010         ?
1111111111     1111111111     10101010         ?
1000101110     0110101110     ?                     11100110
1011101111     0110101110     ?                     01010000
0000000000     0000000000     ?                     10000000
1111111111     1111111111     ?                     10010010
 


Part 3. Cracking SDES and TripleSDES
 
1) Give the SDES encoding of the following CASCII plaintext using the key 0111001101. (The answer is 64 bits long.)
CRYPTOGRAPHY

2) The message in the file msg1.txt Download msg1.txtwas encoded using SDES. Decrypt it, and find the 10-bit raw key used for its encryption.

3) The message in the file msg2.txt Download msg2.txtwas encoded using TripleSDES. Decrypt it, and find the two 10-bit raw keys used for its encryption.

Submission Format
1) Please upload your files( SDES.java, TripleDES.java, the two java files for part 3 and Project1.doc) to  Canvas before the due time.

2)This is a group project. One submission per group!

3)The number of the submitted files should be 5 in total. All the source code should be put in java files (not doc /pdf files).

4) Project1.doc should contain special instructions needed to run your programs, the answers to the problems, and screenshots.

5) Click Submit Assignment in the upper right to choose the upload type for your assignment, Then click Submit Assignment to complete the submission.